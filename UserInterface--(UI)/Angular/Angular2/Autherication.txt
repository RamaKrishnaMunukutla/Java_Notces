

  Angular login security
  angular login authentication examples stackblitz
  secure-image-loads (Zips)
  

=====================================================================================================
  
 login.ts :=
~~~~~~~~~~
     User Name : <input type="text" name="username" [(ngModel)]="username">
    Password : <input type="password" name="password" [(ngModel)]="password">
  </div>
  <button (click)=checkLogin() class="btn btn-success">
    Login
  </button>

-------------------

  constructor(private router: Router, private loginservice: AuthenticationService)
  
 checkLogin() {
    if (this.loginservice.authenticate(this.username, this.password)
    ) {
      this.router.navigate([''])
      this.invalidLogin = false
    } else
      this.invalidLogin = true
  }
========================================================================================================
 
 AuthenticationService :=
~~~~~~~~~~~~~~~~~~~~~~~~~
  authenticate(username, password) {
    if (username === "javainuse" && password === "password") {
      sessionStorage.setItem('username', username)
      return true;
    } else {
      return false;
    }
  }

  isUserLoggedIn() {
    let user = sessionStorage.getItem('username')
    
    return !(user === null)
  }

  logOut() {
    sessionStorage.removeItem('username')
  }
=======================================================================================================

 logout.ts :=
~~~~~~~~~~~

   constructor(
    private authentocationService: AuthenticationService,
    private router: Router) {

  }

  ngOnInit() {
    this.authentocationService.logOut();
    this.router.navigate(['login']);
  }

=======================================================================================================


----> Can bind "ServiceRef" (in TS constructor) in HTML as     *ngIf="loginService.isUserLoggedIn()"

=======================================================================================================

 Header(HTML) :=
~~~~~~~~~~~~~~~
  <ul class="navbar-nav">
    <li><a *ngIf="loginService.isUserLoggedIn()" routerLink="/" class="nav-link">View Employees</a></li>
    <li><a *ngIf="loginService.isUserLoggedIn()" routerLink="/addemployee" class="nav-link">Add New Employee</a></li>
    <li><a *ngIf="!loginService.isUserLoggedIn()" routerLink="/login" class="nav-link">Login</a></li>
    <li><a *ngIf="loginService.isUserLoggedIn()" routerLink="/logout" class="nav-link">LogOut</a></li>
  </ul>



 Header(TS) :=
~~~~~~~~~~~~~~~
   constructor(private loginService:AuthenticationService){ }

===================================================================================================

 Routes :=
~~~~~~~~~
const routes: Routes = [
  { path: '', component: EmployeeComponent,canActivate:[AuthGaurdService] },
  { path: 'addemployee', component: AddEmployeeComponent,canActivate:[AuthGaurdService]},
  { path: 'login', component: LoginComponent },
  { path: 'logout', component: LogoutComponent,canActivate:[AuthGaurdService] }, 
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})

----> Here "-canActivate:[AuthGaurdService]-" Protects components after Login-In. (**************)


=======================================================================================================

    let today = new Date();
    let day = today.getDate();
    let mont = today.getMonth() + 1; //January is 0!
    let dd: string;
    let mm: string;
    var yyyy = today.getFullYear();
	
=======================================================================================================

 permissionsdata(){
    return JSON.parse(localStorage.getItem('role_permissions'));
  }


  logOut() {
    localStorage.clear();
    this.router.navigate(['/']);
  }






















