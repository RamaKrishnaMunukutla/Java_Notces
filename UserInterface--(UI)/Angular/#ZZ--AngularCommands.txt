 
  
    
   .......Tutorials770.......GITHUBLINKS


====================================================================================================

  PropertyBinding[] :: [ hidden,isDisabled ] ~~~~ To HTML 
  2-WayBinding~~~~[(ngModel)] ...Both  
  Interpolation{{}} ~~~~ To HTML 

    --flat true/false -----> Dedicated-Folder.
	 --spec==true/false ----> for Spects.
	
	Dynamic ----> ${} ++ ` `  ==  `${}`
	
	
	    Angular ----> Client Side Application, TypeScript-Based && Produces SPA.
 
 
      https://stackblitz.com/fork/angular-ivy


      https://github.com/gothinkster/angular-realworld-example-app
	
	
 ConcretePage :=
~~~~~~~~~~~~~~~ 
	https://www.concretepage.com/angular/  //////  https://angular.io/guide/animations
	
	https://www.concretepage.com/angular-material/
	

 Angular CLI :=
~~~~~~~~~~~~~~
 ---It is used to create  ready made Angular-Project.
 
	 
================================================================================================================= [ }); ]

----> ng new Hello --skip-tests /// ng new Hello -si -st ..../// Skips the "-Test-"(Spects) files. code
   
----> npm i || npm update || npm audit fix  || npm i @angular-devkit/build-angular  ---> for Cloned Projects (******)
  
----> npm i -g @angular/core --force    ///  npm i -g typescript   
 
---->      npm i -g @angular/cli       ///  npm update @angular/cli@latest  

  
  Install-Angular ---------> npm uninstall(i) -g @angular/cli   ////    npm i --save-dev @angular/cli@latest

  Global Install ----------> npm install -g @angular/cli   ////   npm i -g @angular/core 
	
  Local Install -----------> npm i @angular/cli@6  
  
    Dev-Kit   -------------> npm i @angular-devkit/build-angular@0.803.24
	
	
 npm uninstall -g @angular/cli                                                            
 npm i   -g @angular/cli@latest  
 npm i --save-dev @angular/cli@latest
 npm audit fix --force 


   Check-Angular-Version -----> ng --version 						 

 

 npm i bootstrap@3 --save          /// npm i --save bootstrap@3   ///   npm i ngx-bootstrap --save  /// npm install bootstrap@latest
 npm i bootstrap@3 jquery --save  ///  npm i bootstrap jquery --save 
 
 
 npm uninstall @angular-devkit/build-angular
 npm i @angular-devkit/build-angular@latest
 npm i @angular-devkit/build-angular@0.13.0
 npm i -g @angular-devkit/schematics-cli
 npm i --save-dev @angular-devkit/build-angular
 
 
 Port :=
~~~~~~~
 ng s --port 4201 //Change Port 
 ng s -o //Opens Browser Automatically.


  Http  :=  npm i @angular/http@latest                                           
~~~~~~~~
 
 
 Forms :=   npm i --save forms-angular  ///  npm install @angular/forms --save
~~~~~~~


 Route :=   npm i angular-route 
~~~~~~~
 
 
 Pagination :=   npm install ngx-pagination --save
~~~~~~~~~~~~~~
 
  Full-Stack ----> npm install --save cors
  

 Others :=
~~~~~~~~~
   npm i express body-parser --save
                   
===================================================================================
 
  ng new HelloWorld -d        //Tells which files are created in CMD
 ng new Hello2 --skip-tests  // To skip test files.
 
 Component :=
~~~~~~~~~~~~
 ng g c Hello11   //component
 ng g c admin/users                      ......../// In a "-Admin-" Folder.
 ng g c  users --flat                    ......./// Create Component without-Folder.
 ng g c  hello -it -s                    ......///  For In-Line (Styles & Template)
 ng g module mod                         .....///   Generates Module 
 ng g c specific-folder/component-name   ....///  Generates Component Inside Folder 
 
 
 ng g c Hello/login        --nospec --flat=true 
 ng g c Hello/department   --nospec --flat=true  //Creates-Components under 1 folder.
 ng g c Hello/Employee
 
 
 Class && Interface :=
~~~~~~~~~~~~~~~~~~~~~
 ng g class Upload (Or) ng g class display/Upload --spec=true-d   //Class
 ng g Interface Uppload //Interface.
 ng g s    ImageService   //service
 ng g s ImageService --spec=false -d
  
  
 Enums && Pipe :=
~~~~~~~~~~~~~~
 ng g e Upload  ........// Enums
 ng g pipe my-new-pipe
 ng g pipe ImageFilter //Pipes
 
 
 Guards && Router :=
~~~~~~~~~~~~~~~~~~~
 ng g g <guardName> /// Guards
 ng g m app-routing --flat=true --module=app  //Router 
 
 
Json (db.json):=
~~~~~~~~~~~~~~~
 npm install -g json-server
 npm install json-server --save
 npm install -g json-server --save 
 json-server --watch db.json      ///  json-server -p 4000 db.json
 
 
======================================================================================================
 
 rxjs:=
 ~~~~~
 npm install -g rxjs
 npm install --save rxjs-compat
 npm install -g typescript
 npm install -g webpack
 
 import { Observable } from 'rxjs';
 import { map } from "rxjs/operators";
 import 'rxjs/add/operator/map';
 
 import 'rxjs/add/operator/catch';
 import 'rxjs/add/operator/toPromise';
 
================================================================================== ==============
 
 angular-material :=         // <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
~~~~~~~~~~~~~~~~~~~
 npm i -s @angular/material@latest
 ng add @angular/material
 npm i angular-material --save
 npm i angular-material-datepicker
 npm i --save @angular/material @angular/cdk
 npm i material-design-icons

 Animation :=
~~~~~~~~~~
 npm i --save @angular/material @angular/animations
 npm i @angular/animations --save
 npm i ng-pick-datetime --save

 pagination :=
~~~~~~~~~~~~~~
  npm i ngx-pagination --save
  npm i primeng font-awesome
  import {NgxPaginationModule} from 'ngx-pagination';
  

 Drag-Drop :=
~~~~~~~~~~~
   npm install angular-firebase --save
   npm install firebase @angular/fire --save
   npm install angularfire2@latest --save
   
 Image Upload :=
~~~~~~~~~~~~~~
 npm i ng2-file-upload --save
 npm i image-compressor.js --save
 npm i ngx-image-compress
 npm install ng2-image-compress --save

 Spinner :=
~~~~~~~~~
npm install --save-dev @types/core-js
 npm install -g typescript 
 npm install -g typescript
 npm install ngx-spinner --save
 
 Date Picker :=
~~~~~~~~~~~~~
 npm i -g igniteui-cli
 import { IgxDatePickerModule } from 'igniteui-angular';
 ng add ngx-bootstrap  --component datepicker

 Download-file :=
~~~~~~~~~~~~~~~~
ng new angular-downlaod-file
npm i @types/file-saver
npm install angular-file-saver


 Session :=
~~~~~~~~~~
npm install --save @ng-idle/core @ng-idle/keepalive angular2-moment

import { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';
import { Keepalive } from '@ng-idle/keepalive';

===================================================================================================================

Imports :=
---------
  
  import {HttpClientModule,HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';
  import {Http, Response, RequestOptions, Headers,Http,HttpModule} from '@angular/http';
  import {Response, RequestOptions, Headers} from '@angular/http';
 

  import { Component, OnInit, Inject, HostListener, NgModule,OnChanges,Input,Output,Injectable } from '@angular/core';
  import { Observable , Subscription, Subject } from 'rxjs';
 
  
  import {FormGroup ,FormControl,FormsModule,ReactiveFormsModule,Validators} from '@angular/forms';  
  import {ActivatedRoute, Router,RouterModule} from '@angular/router';
  import { Router, ActivatedRoute } from '@angular/router';
  import { httpInterceptorProviders } from './http-interceptors';
  
  
  import {BrowserModule} from '@angular/platform-browser';
  import { NgxEditorModule } from 'ngx-editor';
  import { AppRoutingModule } from './app-routing.module'; 


  import { ToastrManager } from 'ng6-toastr-notifications';
  import { SubSink } from 'subsink'; 
  import { ModalModule } from 'ngx-bootstrap/modal';  


  
  // ****OTHERS***
  import { ToastrModule } from 'ngx-toastr';
  import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
  import { Claim, UpdateClaim } from '../app/_shared/models/claim.model';
  import {NgxPaginationModule} from 'ngx-pagination';
  import { IndexRoutingModule } from './index-routing.module';
  
  
  import { AngularCsv } from 'angular7-csv/dist/Angular-csv';
  import { ToastrService } from 'ngx-toastr';
  import { BsModalService, BsModalRef } from 'ngx-bootstrap';
  import { BrowserModule } from '@angular/platform-browser';


  import { ImageCompressService, ResizeOptions, ImageUtilityService, IImage, SourceImage } from  'ng2-image-compress';
  import {BrowserAnimationsModule} from '@angular/platform-browser/animations';
  import { DOCUMENT,Location } from '@angular/common';  
  import {DataTablesModule} from 'angular-datatables';  


  import { FoodNode } from '../food-node';
  import { ExampleFlatNode } from '../example-flat-node';
  import {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';
  import {FlatTreeControl} from '@angular/cdk/tree';
  import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
  import {MatTreeModule} from '@angular/material/tree';
  import { async, ComponentFixture, TestBed } from '@angular/core/testing';
  
  
  import { MatFormFieldModule } from '@angular/material/form-field';
  import {MatSelectModule} from '@angular/material/select';
  import { MatInputModule } from '@angular/material/input';
  import { HttpClientModule } from '@angular/common/http';
  import {MatAutocompleteModule} from '@angular/material/autocomplete';

  Important :=
~~~~~~~~~~~~~
    BrowserModule,
    AppRoutingModule,
    HttpClientModule,
    FormsModule,
	ReactiveFormsModule
	
====================================================================================
  
  db.json:=
~~~~~~~~~~~~


=========================================================================
 
 app.component.ts :=
~~~~~~~~~~~~~~~~~

========================================================================= 
 
 app.component.html:=
~~~~~~~~~~~~~~~~~~~~

=============================================================================

 employee.service.ts :=
~~~~~~~~~~~~~~~~~~~~~~


================================================================================

 app.component.css :=
~~~~~~~~~~~~~~~~~~~~


==========================================================================================
 
 Tutorials770 :=
~~~~~~~~~~~~~~~
 
 Angular-2 :=
~~~~~~~~~~~~
	  https://github.com/gopinav/Angular-2-Tutorials
	  https://github.com/gopinav/Angular-Tutorials
	  https://github.com/gopinav/Angular-2-Routing
	  https://github.com/gopinav/Angular-2-Services-and-Http
	  https://github.com/gopinav/Angular-2-Forms
	  https://github.com/gopinav/Angular-2-Animations  
 
 
 Angular && Forms :=
~~~~~~~~~~~~~~~~~~~

	  https://github.com/gopinav/Angular-Tutorials
	  https://github.com/gopinav/Angular-Component-Interaction-Tutorial
	  https://github.com/gopinav/Angular-Forms-Tutorial
	  
	  
	      Material-Tutorial ----> https://www.youtube.com/watch?v=jUfEn032IL8&list=WL&index=18&ab_channel=freeCodeCamp.org
	 
	 
 Material && Security :=
~~~~~~~~~~~~~~~~~~~~~~
	 https://github.com/gopinav/Angular-Authentication-Tutorial
	 https://github.com/gopinav/Angular-Material-Tutorial
	 	 
		 
 JavaScript :=
~~~~~~~~~~~~~
      https://github.com/gopinav/Problem-solving-with-Javascript
      https://github.com/gopinav/javascript-algorithms
		 
		 
 TypeScript :=
~~~~~~~~~~~~~~
      https://github.com/gopinav/TypeScript-Tutorial
      https://github.com/gopinav/ES2015-Typescript-Tutorial
  
============================================================================================
 
 GITHUBLINKS :=
~~~~~~~~~~~~~
  https://github.com/gothinkster/angular-realworld-example-app
 
 
 
 
 
 