




    
	
============================================================================================

   Tables ----> Collection
      Row ----> Document
   Column ----> Feilds

       MONGO-DB ----> SBMS 7:00 AM (22th_to_29th  /12/2020) [**********]
	   
================================================================================================
	                           
    							   Basic Mongo Commands
							   ~~~~~~~~~~~~~~~~~~~~~~~~~~
	   
#1. Start MongoDb Server
cmd> mongod

#2. Start MongoDb Client
cmd> mongo

#3.**** Start MongoDB server in Secure mode
cmd> mongod --auth

=======================================================

#1. View all Database
> show databases

#2. Use/Goto Database
> use sample
(if it not exist, it is created)

#3. View Collections(similer to tables)
> show collections

#4. **create a new user with read-write and admin permissions.
cmd>

 db.createUser(
   {
     user : "RAG",
     pwd  : "NIT",
     roles: [ "readWrite", "dbAdmin" ]
   }
 )
 

#4(b). Insert Data
> db.collectionName.insert({JSON FORMAT})

> db.student.insert({"empId":10,"empName":"SAM","empSal":3.3});

#5. View/Print Data

db.student.find();
> db.student.find().pretty();
 

================================================================================


 
      https://www.javaguides.net/p/java-mongodb-tutorial.html

================================================================================================

 NoSQL Database (not only SQL) :=
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Some examples of NoSQL database system with their category are:

MongoDB, CouchDB, Cloudant (Document-based)
Memcached, Redis, Coherence (key-value store)
HBase, Big Table, Accumulo (Tabular)

 Disadvantage of NoSQL :=
~~~~~~~~~~~~~~~~~~~~~~~~
 --- Management challenge
 --- GUI is not available
 ---  Backup



==================================================================================

----> Mongo DB is a document-oriented database in which data is written in BSON format which is a JSON like format. 
      MongoDB is schema less. 
	  It is a document database in which one collection holds different documents.

---->It is an open source product, developed and supported by a company named 10gen.

---->MongoDB is available under General Public license for free, and it is also available under Commercial license from the manufacturer.

---->first ready production of MongoDB has been considered from version 1.4 which was released in March 2010.
     Stable release	4.2.7 / 26 May 2020
	 
---->MongoDB is a document oriented database. It is a key feature of MongoDB. It offers a document oriented storage. It is very simple you can program it easily.


----->MongoDB is a NoSQL(non-SQL or non relational database.) Database which doesn't use tables for storing data. It is generally used to store big data and real-time web applications.

----->NoSQL provides a mechanism for storage and retrieval of data other than tabular relations model used in relational databases. NoSQL database doesn't use tables for storing data. It is generally used to store big data and real-time web applications.



 DataTypes :=
~~~~~~~~~~~~~

        String.........Integer.........Boolean...........Double 

     Min/Max Keys......Arrays...........Object.............Null........Symbol......Date	 


================================================================================================


	   NoSQL ----> No Schema, Query && Table but handles Huge-data.
	          --- Document // Key-Value // Graph //  Wide-Column Stores  Databases
			  --- Not good for Complex-Queries.
	          --- It is Horizontal-Scaling.
			  --- It is Opposite to SQL -- 'UQL'
			  ---  follows 'CAP' theorem.
			 
==========================================================================================			 

---> MongoDB using Spring Boot, supports findBy and @Query concepts to implement custom query concept
							
---> use findBy for simple queries, for complex types we use @Query.

---> If we create PrimaryKey variable of non-String DataType, then MongoDB will not generate PK as HexaDecimal Value.
     You should provide manual value.

 Eg :=
~~~~~~
  	//(Just for Compare): SELECT * FROM Book WHERE author=?
	List<Book> findByAuthor(String author);
	
	//(Just for Compare): SELECT * FROM Book WHERE noOfPgs<=?
	List<Book> findByNoOfPgsLessThanEqual(Integer noOfPgs);
	
	//(Just for Compare): SELECT * FROM Book WHERE id in (values)
	List<Book> findByIdIn(List<Integer> ids);
	
	//(Just for Compare): SELECT * FROM Book WHERE author=? and btype=?
	List<Book> findByAuthorAndBtype(String author,String btype);	 
			 
==========================================================================================



































			 

